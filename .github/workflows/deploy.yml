# name: Deploy to Heroku

# on:
#   push:
#     branches:
#       - main

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Find Dockerfile
#         run: find . -name "Dockerfile"

#       - name: Verify Dockerfile exists
#         run: |
#           if [ ! -f ContactsApplication/ContactsApplication.API/Dockerfile ]; then echo "❌ Dockerfile not found!"; exit 1; fi
#           echo "✅ Dockerfile found at ContactsApplication/ContactsApplication.API/"


name: Deploy to Fly.io

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build the project
        run: dotnet build --configuration Release

      - name: Publish the project
        run: dotnet publish --configuration Release --output ./publish

      - name: Set up Fly.io CLI
        uses: superfly/flyctl-actions/setup-flyctl@v1

      - name: Log in to Fly.io
        run: flyctl auth login --access-token fo1_0py6W7nusz68a7XBnrBFVADyuWC-1E6OwhunKTGzgUw

      - name: Deploy to Fly.io
        run: |
          flyctl deploy --app contacts-application --local-only
          
      - name: Set MongoDB Atlas URI on Fly.io
        run: flyctl secrets set MONGO_DB_URI=mongodb+srv://admin:admin@contactsapplicationclus.avilejp.mongodb.net/?retryWrites=true&w=majority&appName=contactsApplicationCluster --app contacts-application

      - name: Check deployment status
        run: flyctl status --app contacts-application

